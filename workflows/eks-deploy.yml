name: Terraform Deploy

on:
  push:
    branches:
      - main  # Adjust this to your main branch name if different
  workflow_dispatch:  # Allow manual triggering

env: # hard-code resource names
  AWS_REGION: us-west-2
  TFSTATE_REGION: us-west-2
  TF_VAR_cluster_name: petclinic-demo

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 5

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Build Docker images
        run: ./mvnw clean install -P buildDocker
        
      - name: Push Docker images to ECR
        run: |
          export ACCOUNT=$(aws sts get-caller-identity | jq .Account -r)
          export REGION=${{ env.AWS_REGION }}
          ./push-ecr.sh
      
      - name: Create kubeconfig directory
        run: mkdir -p ${{ github.workspace }}/.kube

      - name: Set KUBECONFIG environment variable
        run: echo KUBECONFIG="${{ github.workspace }}/.kube/config" >> $GITHUB_ENV

      - name: Set up kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.TF_VAR_cluster_name }} --region ${{ env.AWS_REGION }} --alias ${{ env.TF_VAR_cluster_name }}

      - name: Run kubectl commands
        run: |
          ./scripts/eks/appsignals/tf-deploy-k8s-res.sh

      - name: Output Application URL
        run: |
          endpoint="http://$(kubectl get ingress -o json --output jsonpath='{.items[0].status.loadBalancer.ingress[0].hostname}')"
          echo "Application is available at: $endpoint"
          echo "APPLICATION_URL=$endpoint" >> $GITHUB_ENV
