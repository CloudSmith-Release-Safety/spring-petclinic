{
  "org_name": "CloudSmith-Release-Safety",
  "repo_name": "spring-petclinic",
  "repo_url": "https://github.com/CloudSmith-Release-Safety/spring-petclinic",
  "provided_apis": [
    {
      "type": "rest",
      "endpoint": "/owners",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves a list of all owners",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of owners",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "firstName": "string",
                "lastName": "string",
                "address": "string",
                "city": "string",
                "telephone": "string",
                "pets": "array"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners",
      "method": "POST",
      "service_name": "CustomerService",
      "description": "Creates a new owner",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {
        "body": {
          "type": "object",
          "required": true,
          "description": "Owner details",
          "properties": {
            "firstName": {
              "type": "string",
              "required": true,
              "description": "Owner's first name"
            },
            "lastName": {
              "type": "string",
              "required": true,
              "description": "Owner's last name"
            },
            "address": {
              "type": "string",
              "required": true,
              "description": "Owner's address"
            },
            "city": {
              "type": "string",
              "required": true,
              "description": "Owner's city"
            },
            "telephone": {
              "type": "string",
              "required": true,
              "description": "Owner's telephone number"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Owner created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "firstName": "string",
              "lastName": "string",
              "address": "string",
              "city": "string",
              "telephone": "string",
              "pets": "array"
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves details of a specific owner by ID",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Owner details retrieved successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "firstName": "string",
              "lastName": "string",
              "address": "string",
              "city": "string",
              "telephone": "string",
              "pets": "array"
            }
          }
        },
        "400": {
          "description": "Invalid owner ID provided",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}",
      "method": "PUT",
      "service_name": "CustomerService",
      "description": "Updates an existing owner",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the owner to update"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Owner details to update",
          "properties": {
            "firstName": {
              "type": "string",
              "required": true,
              "description": "Owner's first name"
            },
            "lastName": {
              "type": "string",
              "required": true,
              "description": "Owner's last name"
            },
            "address": {
              "type": "string",
              "required": true,
              "description": "Owner's address"
            },
            "city": {
              "type": "string",
              "required": true,
              "description": "Owner's city"
            },
            "telephone": {
              "type": "string",
              "required": true,
              "description": "Owner's telephone number"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "Owner updated successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/petTypes",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves list of all pet types",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of pet types",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "name": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets",
      "method": "POST",
      "service_name": "CustomerService",
      "description": "Creates a new pet for a specific owner",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the owner to add a pet to"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet details",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Pet's name"
            },
            "birthDate": {
              "type": "string",
              "required": true,
              "description": "Pet's birth date"
            },
            "typeId": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet's type"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Pet created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "name": "string",
              "birthDate": "string",
              "type": "object"
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "PUT",
      "service_name": "CustomerService",
      "description": "Updates an existing pet",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to update"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet details to update",
          "properties": {
            "id": {
              "type": "integer",
              "required": true,
              "description": "Pet's ID"
            },
            "name": {
              "type": "string",
              "required": true,
              "description": "Pet's name"
            },
            "birthDate": {
              "type": "string",
              "required": true,
              "description": "Pet's birth date"
            },
            "typeId": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet's type"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "Pet updated successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves details of a specific pet",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Pet details retrieved successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "name": "string",
              "birthDate": "string",
              "type": "object",
              "insurance_id": "string",
              "insurance_name": "string",
              "price": "number",
              "nutritionFacts": "array"
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/diagnose/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Diagnoses a pet using AI models",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to diagnose"
          }
        ]
      },
      "responses": {
        "204": {
          "description": "Pet diagnosis completed",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/vets",
      "method": "GET",
      "service_name": "VetsService",
      "description": "Retrieves list of all veterinarians",
      "file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/web/VetResource.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of veterinarians",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "firstName": "string",
                "lastName": "string",
                "specialties": "array"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/visits",
      "method": "POST",
      "service_name": "VisitsService",
      "description": "Creates a new visit for a pet",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet for the visit"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Visit details",
          "properties": {
            "date": {
              "type": "string",
              "required": true,
              "description": "Date of the visit"
            },
            "description": {
              "type": "string",
              "required": true,
              "description": "Description of the visit"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Visit created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "date": "string",
              "description": "string",
              "petId": "integer"
            }
          }
        },
        "400": {
          "description": "Invalid date - visits cannot be scheduled more than 30 days in advance",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets/{petId}/visits",
      "method": "GET",
      "service_name": "VisitsService",
      "description": "Retrieves visits for a specific pet",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to retrieve visits for"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of visits for the pet",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": "integer",
                    "date": "string",
                    "description": "string",
                    "petId": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/pets/visits",
      "method": "GET",
      "service_name": "VisitsService",
      "description": "Retrieves visits for multiple pets",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "parameters": {
        "query": [
          {
            "name": "petId",
            "type": "array",
            "required": true,
            "description": "List of pet IDs to retrieve visits for"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of visits for the specified pets",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": "integer",
                    "date": "string",
                    "description": "string",
                    "petId": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/gateway/owners/{ownerId}",
      "method": "GET",
      "service_name": "ApiGatewayService",
      "description": "Retrieves owner details with visits information through the API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiGatewayController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the owner to retrieve details for"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Owner details with pet visits information",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "firstName": "string",
              "lastName": "string",
              "address": "string",
              "city": "string",
              "telephone": "string",
              "pets": "array"
            }
          }
        },
        "400": {
          "description": "Bad request - invalid owner ID",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves all owners through the API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of owners",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "firstName": "string",
                "lastName": "string",
                "address": "string",
                "city": "string",
                "telephone": "string",
                "pets": "array"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners/{ownerId}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves specific owner through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the owner to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Owner details",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners/{ownerId}",
      "method": "PUT",
      "service_name": "ApiService",
      "description": "Updates owner through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the owner to update"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Owner details to update",
          "properties": {
            "firstName": {
              "type": "string",
              "required": true,
              "description": "Owner's first name"
            },
            "lastName": {
              "type": "string",
              "required": true,
              "description": "Owner's last name"
            },
            "address": {
              "type": "string",
              "required": true,
              "description": "Owner's address"
            },
            "city": {
              "type": "string",
              "required": true,
              "description": "Owner's city"
            },
            "telephone": {
              "type": "string",
              "required": true,
              "description": "Owner's telephone number"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Owner updated successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners",
      "method": "POST",
      "service_name": "ApiService",
      "description": "Creates a new owner through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "body": {
          "type": "object",
          "required": true,
          "description": "Owner details",
          "properties": {
            "firstName": {
              "type": "string",
              "required": true,
              "description": "Owner's first name"
            },
            "lastName": {
              "type": "string",
              "required": true,
              "description": "Owner's last name"
            },
            "address": {
              "type": "string",
              "required": true,
              "description": "Owner's address"
            },
            "city": {
              "type": "string",
              "required": true,
              "description": "Owner's city"
            },
            "telephone": {
              "type": "string",
              "required": true,
              "description": "Owner's telephone number"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Owner created successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/petTypes",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves pet types through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of pet types",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves pet details through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Pet details",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/diagnose/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Diagnoses pet through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to diagnose"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Pet diagnosis completed",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners/{ownerId}/pets/{petId}",
      "method": "PUT",
      "service_name": "ApiService",
      "description": "Updates pet details through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to update"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet details to update",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Pet's name"
            },
            "birthDate": {
              "type": "string",
              "required": true,
              "description": "Pet's birth date"
            },
            "typeId": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet's type"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Pet updated successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/customer/owners/{ownerId}/pets",
      "method": "POST",
      "service_name": "ApiService",
      "description": "Creates a new pet through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the owner to add pet to"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet details",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Pet's name"
            },
            "birthDate": {
              "type": "string",
              "required": true,
              "description": "Pet's birth date"
            },
            "typeId": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet's type"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Pet created successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/vet/vets",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves veterinarians through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of veterinarians",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/visit/owners/{ownerId}/pets/{petId}/visits",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves visits for a specific pet through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet to retrieve visits for"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of visits for the pet",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/visit/owners/{ownerId}/pets/{petId}/visits",
      "method": "POST",
      "service_name": "ApiService",
      "description": "Creates a new visit through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet for the visit"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Visit details",
          "properties": {
            "date": {
              "type": "string",
              "required": true,
              "description": "Date of the visit"
            },
            "description": {
              "type": "string",
              "required": true,
              "description": "Description of the visit"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Visit created successfully",
          "content_type": "application/json"
        },
        "400": {
          "description": "Invalid date - visits cannot be scheduled more than 30 days in advance",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/insurance/insurances",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves all insurances through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of insurances",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/billing/billings",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves all billings through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "List of billings",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/insurance/pet-insurances",
      "method": "POST",
      "service_name": "ApiService",
      "description": "Creates a pet insurance through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet insurance details",
          "properties": {
            "pet_id": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet"
            },
            "insurance_name": {
              "type": "string",
              "required": true,
              "description": "Name of the insurance"
            },
            "price": {
              "type": "number",
              "required": true,
              "description": "Price of the insurance"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Pet insurance created successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/insurance/pet-insurances/{petId}",
      "method": "PUT",
      "service_name": "ApiService",
      "description": "Updates a pet insurance through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet insurance details to update",
          "properties": {
            "insurance_name": {
              "type": "string",
              "required": true,
              "description": "Name of the insurance"
            },
            "price": {
              "type": "number",
              "required": true,
              "description": "Price of the insurance"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Pet insurance updated successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/insurance/pet-insurances/{petId}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves a pet insurance through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Pet insurance details",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/payments/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves payments for a pet through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of payments for the pet",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/payments/owners/{ownerId}/pets/{petId}/{paymentId}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves a specific payment through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          },
          {
            "name": "paymentId",
            "type": "string",
            "required": true,
            "description": "ID of the payment"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Payment details",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/payments/owners/{ownerId}/pets/{petId}",
      "method": "POST",
      "service_name": "ApiService",
      "description": "Creates a new payment through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet's owner"
          },
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "ID of the pet"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Payment details",
          "properties": {
            "amount": {
              "type": "number",
              "required": true,
              "description": "Payment amount"
            },
            "currency": {
              "type": "string",
              "required": true,
              "description": "Payment currency"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Payment created successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/payments/clean-db",
      "method": "DELETE",
      "service_name": "ApiService",
      "description": "Cleans payment database through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {},
      "responses": {
        "200": {
          "description": "Payment database cleaned successfully",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/nutrition/facts/{petType}",
      "method": "GET",
      "service_name": "ApiService",
      "description": "Retrieves nutrition facts for a pet type through API gateway",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiController.java",
      "parameters": {
        "path": [
          {
            "name": "petType",
            "type": "string",
            "required": true,
            "description": "Type of pet to get nutrition facts for"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Nutrition facts for the pet type",
          "content_type": "application/json"
        }
      }
    }
  ],
  "consumed_apis": [
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners",
      "method": "GET",
      "description": "API Gateway retrieving all owners from customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {},
      "expected_response": "Array of owner objects"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}",
      "method": "GET",
      "description": "API Gateway retrieving specific owner from customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {},
      "expected_response": "Owner object with details"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}",
      "method": "PUT",
      "description": "API Gateway updating owner in customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": "Owner object with updated details",
      "expected_response": "Void"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners",
      "method": "POST",
      "description": "API Gateway creating new owner in customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": "Owner object with new details",
      "expected_response": "Void"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/petTypes",
      "method": "GET",
      "description": "API Gateway retrieving pet types from customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {},
      "expected_response": "Array of pet type objects"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "description": "API Gateway retrieving pet details from customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {},
      "expected_response": "Pet object with details"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/diagnose/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "description": "API Gateway diagnosing pet through customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {},
      "expected_response": "Void"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "PUT",
      "description": "API Gateway updating pet in customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": "Pet object with updated details",
      "expected_response": "Void"
    },
    {
      "type": "rest",
      "service": "CustomersService",
      "endpoint": "/owners/{ownerId}/pets",
      "method": "POST",
      "description": "API Gateway creating new pet in customers service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": "Pet object with new details",
      "expected_response": "Pet object with complete details"
    },
    {
      "type": "rest",
      "service": "VetsService",
      "endpoint": "/vets",
      "method": "GET",
      "description": "API Gateway retrieving all vets from vets service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VetsServiceClient.java",
      "request_payload": {},
      "expected_response": "Array of vet objects"
    },
    {
      "type": "rest",
      "service": "VisitsService",
      "endpoint": "/pets/visits",
      "method": "GET",
      "description": "API Gateway retrieving visits for multiple pets from visits service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VisitsServiceClient.java",
      "request_payload": {
        "petId": "Comma-separated list of pet IDs"
      },
      "expected_response": "Object with array of visit objects"
    },
    {
      "type": "rest",
      "service": "VisitsService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/visits",
      "method": "GET",
      "description": "API Gateway retrieving visits for specific pet from visits service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VisitsServiceClient.java",
      "request_payload": {},
      "expected_response": "Object with array of visit objects"
    },
    {
      "type": "rest",
      "service": "VisitsService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/visits",
      "method": "POST",
      "description": "API Gateway creating new visit in visits service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VisitsServiceClient.java",
      "request_payload": "Visit object with details",
      "expected_response": "String with confirmation"
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/insurances",
      "method": "GET",
      "description": "API Gateway retrieving all insurances from insurance service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "request_payload": {},
      "expected_response": "Array of insurance objects"
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances",
      "method": "POST",
      "description": "API Gateway creating pet insurance in insurance service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "request_payload": "Pet insurance object with details",
      "expected_response": "Void"
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances/{petId}",
      "method": "PUT",
      "description": "API Gateway updating pet insurance in insurance service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "request_payload": "Pet insurance object with updated details",
      "expected_response": "Updated pet insurance object"
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances/{petId}",
      "method": "GET",
      "description": "API Gateway retrieving pet insurance from insurance service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "request_payload": {},
      "expected_response": "Pet insurance object"
    },
    {
      "type": "rest",
      "service": "NutritionService",
      "endpoint": "/nutrition/{petType}",
      "method": "GET",
      "description": "API Gateway retrieving pet nutrition from nutrition service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/NutritionServiceClient.java",
      "request_payload": {},
      "expected_response": "Pet nutrition object"
    },
    {
      "type": "rest",
      "service": "BillingService",
      "endpoint": "/billings",
      "method": "GET",
      "description": "API Gateway retrieving billings from billing service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/BillingServiceClient.java",
      "request_payload": {},
      "expected_response": "Array of billing objects"
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "GET",
      "description": "API Gateway retrieving payments from payment service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "request_payload": {},
      "expected_response": "Array of payment objects"
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments/{paymentId}",
      "method": "GET",
      "description": "API Gateway retrieving specific payment from payment service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "request_payload": {},
      "expected_response": "Payment object"
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "POST",
      "description": "API Gateway creating new payment in payment service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "request_payload": "Payment object with details",
      "expected_response": "Created payment object"
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/clean-db",
      "method": "DELETE",
      "description": "API Gateway cleaning payment database in payment service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "request_payload": {},
      "expected_response": "Payment object"
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances/{petId}",
      "method": "GET",
      "description": "Pet Resource retrieving pet insurance for pet details",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "request_payload": {},
      "expected_response": "Pet insurance object"
    },
    {
      "type": "rest",
      "service": "NutritionService",
      "endpoint": "/nutrition/{petType}",
      "method": "GET",
      "description": "Pet Resource retrieving nutrition for pet details",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "request_payload": {},
      "expected_response": "Pet nutrition object"
    }
  ]
}