{
  "org_name": "CloudSmith-Release-Safety",
  "repo_name": "spring-petclinic",
  "repo_url": "https://github.com/CloudSmith-Release-Safety/spring-petclinic",
  "provided_apis": [
    {
      "type": "rest",
      "endpoint": "/owners",
      "method": "POST",
      "service_name": "CustomerService",
      "description": "Creates a new owner in the system",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {
        "body": {
          "type": "object",
          "required": true,
          "description": "Owner details",
          "properties": {
            "firstName": {
              "type": "string",
              "required": true,
              "description": "Owner's first name"
            },
            "lastName": {
              "type": "string",
              "required": true,
              "description": "Owner's last name"
            },
            "address": {
              "type": "string",
              "required": true,
              "description": "Owner's address"
            },
            "city": {
              "type": "string",
              "required": true,
              "description": "Owner's city"
            },
            "telephone": {
              "type": "string",
              "required": true,
              "description": "Owner's telephone number"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Owner created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "firstName": "string",
              "lastName": "string",
              "address": "string",
              "city": "string",
              "telephone": "string"
            }
          }
        },
        "400": {
          "description": "Bad request - invalid parameters",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves owner details by ID",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Owner details retrieved successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "firstName": "string",
              "lastName": "string",
              "address": "string",
              "city": "string",
              "telephone": "string",
              "pets": "array"
            }
          }
        },
        "400": {
          "description": "Bad request - invalid owner ID",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves all owners",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "responses": {
        "200": {
          "description": "List of all owners",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "firstName": "string",
                "lastName": "string",
                "address": "string",
                "city": "string",
                "telephone": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}",
      "method": "PUT",
      "service_name": "CustomerService",
      "description": "Updates an owner's information",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/OwnerResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner to update"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Updated owner details",
          "properties": {
            "firstName": {
              "type": "string",
              "required": true,
              "description": "Owner's first name"
            },
            "lastName": {
              "type": "string",
              "required": true,
              "description": "Owner's last name"
            },
            "address": {
              "type": "string",
              "required": true,
              "description": "Owner's address"
            },
            "city": {
              "type": "string",
              "required": true,
              "description": "Owner's city"
            },
            "telephone": {
              "type": "string",
              "required": true,
              "description": "Owner's telephone number"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "Owner updated successfully",
          "content_type": "application/json"
        },
        "400": {
          "description": "Bad request - invalid parameters",
          "content_type": "application/json"
        },
        "404": {
          "description": "Owner not found",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/petTypes",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves all pet types",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "responses": {
        "200": {
          "description": "List of all pet types",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "name": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/{ownerId}/pets",
      "method": "POST",
      "service_name": "CustomerService",
      "description": "Creates a new pet for an owner",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet's owner"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Pet details",
          "properties": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Pet's name"
            },
            "birthDate": {
              "type": "string",
              "required": true,
              "description": "Pet's birth date in YYYY-MM-DD format"
            },
            "typeId": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet type"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Pet created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "name": "string",
              "birthDate": "string",
              "type": "object"
            }
          }
        },
        "400": {
          "description": "Bad request - invalid parameters",
          "content_type": "application/json"
        },
        "404": {
          "description": "Owner not found",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/diagnose/owners/*/pets/{petId}",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Diagnoses a pet using various AI services",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet to diagnose"
          }
        ]
      },
      "responses": {
        "204": {
          "description": "Diagnosis completed",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/*/pets/{petId}",
      "method": "PUT",
      "service_name": "CustomerService",
      "description": "Updates a pet's information",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet to update"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Updated pet details",
          "properties": {
            "id": {
              "type": "integer",
              "required": true,
              "description": "Pet ID"
            },
            "name": {
              "type": "string",
              "required": true,
              "description": "Pet's name"
            },
            "birthDate": {
              "type": "string",
              "required": true,
              "description": "Pet's birth date in YYYY-MM-DD format"
            },
            "typeId": {
              "type": "integer",
              "required": true,
              "description": "ID of the pet type"
            }
          }
        }
      },
      "responses": {
        "204": {
          "description": "Pet updated successfully",
          "content_type": "application/json"
        },
        "400": {
          "description": "Bad request - invalid parameters",
          "content_type": "application/json"
        },
        "404": {
          "description": "Pet not found",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/*/pets/{petId}",
      "method": "GET",
      "service_name": "CustomerService",
      "description": "Retrieves pet details including insurance and nutrition information",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Pet details with insurance and nutrition info",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "name": "string",
              "birthDate": "string",
              "type": "object",
              "insurance_id": "string",
              "insurance_name": "string",
              "price": "number",
              "nutritionFacts": "string"
            }
          }
        },
        "404": {
          "description": "Pet not found",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/vets",
      "method": "GET",
      "service_name": "VetService",
      "description": "Retrieves all veterinarians",
      "file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/web/VetResource.java",
      "responses": {
        "200": {
          "description": "List of all veterinarians",
          "content_type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": "integer",
                "firstName": "string",
                "lastName": "string",
                "specialties": "array"
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/*/pets/{petId}/visits",
      "method": "POST",
      "service_name": "VisitService",
      "description": "Creates a new visit for a pet",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet for the visit"
          }
        ],
        "body": {
          "type": "object",
          "required": true,
          "description": "Visit details",
          "properties": {
            "date": {
              "type": "string",
              "required": true,
              "description": "Visit date in YYYY-MM-DD format"
            },
            "description": {
              "type": "string",
              "required": true,
              "description": "Visit description"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Visit created successfully",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "petId": "integer",
              "date": "string",
              "description": "string"
            }
          }
        },
        "400": {
          "description": "Bad request - invalid parameters or date more than 30 days in the future",
          "content_type": "application/json"
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/owners/*/pets/{petId}/visits",
      "method": "GET",
      "service_name": "VisitService",
      "description": "Retrieves visits for a specific pet",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "parameters": {
        "path": [
          {
            "name": "petId",
            "type": "integer",
            "required": true,
            "description": "The ID of the pet"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of visits for the pet",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": "integer",
                    "petId": "integer",
                    "date": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/pets/visits",
      "method": "GET",
      "service_name": "VisitService",
      "description": "Retrieves visits for multiple pets",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "parameters": {
        "query": [
          {
            "name": "petId",
            "type": "array",
            "required": true,
            "description": "List of pet IDs to retrieve visits for (comma-separated)"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "List of visits for the specified pets",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": "integer",
                    "petId": "integer",
                    "date": "string",
                    "description": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "rest",
      "endpoint": "/api/gateway/owners/{ownerId}",
      "method": "GET",
      "service_name": "ApiGatewayService",
      "description": "Retrieves owner details with pets and visits information (aggregated data)",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/boundary/web/ApiGatewayController.java",
      "parameters": {
        "path": [
          {
            "name": "ownerId",
            "type": "integer",
            "required": true,
            "description": "The ID of the owner to retrieve"
          }
        ]
      },
      "responses": {
        "200": {
          "description": "Owner details with pets and their visits",
          "content_type": "application/json",
          "schema": {
            "type": "object",
            "properties": {
              "id": "integer",
              "firstName": "string",
              "lastName": "string",
              "address": "string",
              "city": "string",
              "telephone": "string",
              "pets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": "integer",
                    "name": "string",
                    "birthDate": "string",
                    "type": "object",
                    "visits": "array"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content_type": "application/json"
        }
      }
    }
  ],
  "consumed_apis": [
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners/{ownerId}",
      "method": "GET",
      "description": "Retrieves owner details from the customer service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {
        "ownerId": "integer"
      },
      "expected_response": {
        "id": "integer",
        "firstName": "string",
        "lastName": "string",
        "address": "string",
        "city": "string",
        "telephone": "string",
        "pets": "array"
      }
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners",
      "method": "GET",
      "description": "Retrieves all owners from the customer service",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "expected_response": [
        {
          "id": "integer",
          "firstName": "string",
          "lastName": "string",
          "address": "string",
          "city": "string",
          "telephone": "string"
        }
      ]
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners/{ownerId}",
      "method": "PUT",
      "description": "Updates an owner's information",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {
        "firstName": "string",
        "lastName": "string",
        "address": "string",
        "city": "string",
        "telephone": "string"
      }
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners",
      "method": "POST",
      "description": "Creates a new owner",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {
        "firstName": "string",
        "lastName": "string",
        "address": "string",
        "city": "string",
        "telephone": "string"
      }
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/petTypes",
      "method": "GET",
      "description": "Retrieves all pet types",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "expected_response": [
        {
          "id": "integer",
          "name": "string"
        }
      ]
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "description": "Retrieves pet details including insurance and nutrition information",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "expected_response": {
        "id": "integer",
        "name": "string",
        "birthDate": "string",
        "type": "object",
        "insurance_id": "string",
        "insurance_name": "string",
        "price": "number",
        "nutritionFacts": "string"
      }
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/diagnose/owners/{ownerId}/pets/{petId}",
      "method": "GET",
      "description": "Diagnoses a pet using various AI services",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java"
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners/{ownerId}/pets/{petId}",
      "method": "PUT",
      "description": "Updates a pet's information",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {
        "name": "string",
        "birthDate": "string",
        "typeId": "integer"
      }
    },
    {
      "type": "rest",
      "service": "CustomerService",
      "endpoint": "/owners/{ownerId}/pets",
      "method": "POST",
      "description": "Creates a new pet for an owner",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/CustomersServiceClient.java",
      "request_payload": {
        "name": "string",
        "birthDate": "string",
        "typeId": "integer"
      },
      "expected_response": {
        "id": "integer",
        "name": "string",
        "birthDate": "string",
        "type": "object"
      }
    },
    {
      "type": "rest",
      "service": "VetService",
      "endpoint": "/vets",
      "method": "GET",
      "description": "Retrieves all veterinarians",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VetsServiceClient.java",
      "expected_response": [
        {
          "id": "integer",
          "firstName": "string",
          "lastName": "string",
          "specialties": "array"
        }
      ]
    },
    {
      "type": "rest",
      "service": "VisitService",
      "endpoint": "/pets/visits",
      "method": "GET",
      "description": "Retrieves visits for multiple pets",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VisitsServiceClient.java",
      "request_payload": {
        "petId": "string (comma-separated ids)"
      },
      "expected_response": {
        "items": [
          {
            "id": "integer",
            "petId": "integer",
            "date": "string",
            "description": "string"
          }
        ]
      }
    },
    {
      "type": "rest",
      "service": "VisitService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/visits",
      "method": "GET",
      "description": "Retrieves visits for a specific pet",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VisitsServiceClient.java",
      "expected_response": {
        "items": [
          {
            "id": "integer",
            "petId": "integer",
            "date": "string",
            "description": "string"
          }
        ]
      }
    },
    {
      "type": "rest",
      "service": "VisitService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/visits",
      "method": "POST",
      "description": "Creates a new visit for a pet",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/VisitsServiceClient.java",
      "request_payload": {
        "date": "string",
        "description": "string"
      },
      "expected_response": "string"
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/insurances",
      "method": "GET",
      "description": "Retrieves all insurance plans",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "expected_response": [
        {
          "id": "string",
          "name": "string",
          "price": "number",
          "description": "string"
        }
      ]
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances",
      "method": "POST",
      "description": "Creates pet insurance",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "request_payload": {
        "pet_id": "integer",
        "insurance_id": "string",
        "insurance_name": "string",
        "price": "number"
      }
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances/{petId}",
      "method": "PUT",
      "description": "Updates pet insurance",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "request_payload": {
        "pet_id": "integer",
        "insurance_id": "string",
        "insurance_name": "string",
        "price": "number"
      },
      "expected_response": {
        "pet_id": "integer",
        "insurance_id": "string",
        "insurance_name": "string",
        "price": "number"
      }
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances/{petId}",
      "method": "GET",
      "description": "Retrieves insurance for a specific pet",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/InsuranceServiceClient.java",
      "expected_response": {
        "pet_id": "integer",
        "insurance_id": "string",
        "insurance_name": "string",
        "price": "number"
      }
    },
    {
      "type": "rest",
      "service": "NutritionService",
      "endpoint": "/nutrition/{petType}",
      "method": "GET",
      "description": "Retrieves nutrition information for a pet type",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/NutritionServiceClient.java",
      "expected_response": {
        "type": "string",
        "facts": "string"
      }
    },
    {
      "type": "rest",
      "service": "BillingService",
      "endpoint": "/billings",
      "method": "GET",
      "description": "Retrieves all billing records",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/BillingServiceClient.java",
      "expected_response": [
        {
          "id": "string",
          "owner_id": "integer",
          "pet_id": "integer",
          "amount": "number",
          "date": "string",
          "description": "string"
        }
      ]
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "GET",
      "description": "Retrieves payments for a specific pet",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "expected_response": [
        {
          "id": "string",
          "owner_id": "integer",
          "pet_id": "integer",
          "amount": "number",
          "date": "string",
          "payment_method": "string"
        }
      ]
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments/{paymentId}",
      "method": "GET",
      "description": "Retrieves a specific payment by ID",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "expected_response": {
        "id": "string",
        "owner_id": "integer",
        "pet_id": "integer",
        "amount": "number",
        "date": "string",
        "payment_method": "string"
      }
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/owners/{ownerId}/pets/{petId}/payments",
      "method": "POST",
      "description": "Creates a payment for a pet",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "request_payload": {
        "amount": "number",
        "payment_method": "string"
      },
      "expected_response": {
        "id": "string",
        "owner_id": "integer",
        "pet_id": "integer",
        "amount": "number",
        "date": "string",
        "payment_method": "string"
      }
    },
    {
      "type": "rest",
      "service": "PaymentService",
      "endpoint": "/clean-db",
      "method": "DELETE",
      "description": "Cleans the payment database (for testing)",
      "file_path": "spring-petclinic-api-gateway/src/main/java/org/springframework/samples/petclinic/api/application/PaymentClient.java",
      "expected_response": {
        "id": "string",
        "owner_id": "integer",
        "pet_id": "integer",
        "amount": "number",
        "date": "string",
        "payment_method": "string"
      }
    },
    {
      "type": "rest",
      "service": "InsuranceService",
      "endpoint": "/pet-insurances/{petId}",
      "method": "GET",
      "description": "Retrieves insurance information for a specific pet",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "expected_response": {
        "insurance_id": "string",
        "insurance_name": "string",
        "price": "number",
        "pet_id": "integer"
      }
    },
    {
      "type": "rest",
      "service": "NutritionService",
      "endpoint": "/nutrition/{petType}",
      "method": "GET",
      "description": "Retrieves nutrition information for a pet type",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/web/PetResource.java",
      "expected_response": {
        "type": "string",
        "facts": "string"
      }
    }
  ]
}