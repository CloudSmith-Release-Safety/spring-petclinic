{
  "org_name": "multi-repo-org",
  "repo_name": "spring-petclinic",
  "repo_url": "https://github.com/multi-repo-org/spring-petclinic",
  "infrastructure_providers": [
    {
      "provider_id": "dynamodb_apm_test_table",
      "resource_type": "DynamoDB",
      "resource_identifier": "apm_test",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/aws/DdbService.java",
      "infrastructure_type": "SDK-Direct",
      "description": "DynamoDB table created and used by the visits service for storing application monitoring data",
      "interfaces": [
        {
          "interface_type": "database",
          "endpoint_pattern": "dynamodb.${region}.amazonaws.com",
          "operations": ["PutItem", "CreateTable", "DescribeTable"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "table_name": "apm_test",
        "key_schema": {
          "hash_key": "id"
        },
        "attribute_definitions": {
          "id": "S"
        },
        "provisioned_throughput": {
          "read_capacity_units": 1,
          "write_capacity_units": 1
        }
      },
      "security": {
        "authentication": "IAM role-based access"
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "sqs_apm_test_queue",
      "resource_type": "SQS",
      "resource_identifier": "apm_test",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java",
      "infrastructure_type": "SDK-Direct",
      "description": "SQS queue created and used by the customers service for application monitoring",
      "interfaces": [
        {
          "interface_type": "queue",
          "endpoint_pattern": "sqs.${region}.amazonaws.com",
          "operations": ["CreateQueue", "GetQueueUrl", "SendMessage", "PurgeQueue"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "queue_name": "apm_test",
        "delay_seconds": 5
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "kinesis_apm_test_stream",
      "resource_type": "Kinesis",
      "resource_identifier": "apm_test",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java",
      "infrastructure_type": "SDK-Direct",
      "description": "Kinesis stream created and used by the customers service for streaming application monitoring data",
      "interfaces": [
        {
          "interface_type": "stream",
          "endpoint_pattern": "kinesis.${region}.amazonaws.com",
          "operations": ["CreateStream", "DescribeStream", "GetShardIterator", "GetRecords"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "stream_name": "apm_test",
        "shard_count": 1
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "s3_bucket_list",
      "resource_type": "S3",
      "resource_identifier": "*",
      "file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/aws/S3Service.java",
      "infrastructure_type": "SDK-Direct",
      "description": "S3 access for listing buckets by the vets service",
      "interfaces": [
        {
          "interface_type": "storage",
          "endpoint_pattern": "s3.amazonaws.com",
          "operations": ["ListBuckets"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "region": "us-east-1"
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "bedrock_guardrails",
      "resource_type": "BedrockGuardrail",
      "resource_identifier": "*",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java",
      "infrastructure_type": "SDK-Direct",
      "description": "Bedrock guardrail access by customers service",
      "interfaces": [
        {
          "interface_type": "api",
          "endpoint_pattern": "bedrock.${region}.amazonaws.com",
          "operations": ["ListGuardrails", "GetGuardrail"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "region": "${AWS_REGION}"
      },
      "provider_type": "internal"
    },
    {
      "provider_id": "xray_traces_endpoint",
      "resource_type": "XRay",
      "resource_identifier": "https://xray.${REGION}.amazonaws.com/v1/traces",
      "file_path": "otel-collector/customconfig.yaml",
      "infrastructure_type": "SDK-Direct",
      "description": "AWS X-Ray traces endpoint used for sending application telemetry data",
      "interfaces": [
        {
          "interface_type": "api",
          "endpoint_pattern": "https://xray.${REGION}.amazonaws.com/v1/traces",
          "operations": ["PutTraceSegments"],
          "authentication": "IAM"
        }
      ],
      "configuration": {
        "compression": "gzip",
        "authentication": "sigv4auth"
      },
      "provider_type": "internal"
    }
  ],
  "application_consumers": [
    {
      "consumer_id": "visits_service_ddb_consumer",
      "component_type": "service",
      "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/web/VisitResource.java",
      "language": "Java",
      "description": "Visits service that uses DynamoDB to store monitoring data when creating pet visits",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": ["AWS_REGION", "AWS_WEB_IDENTITY_TOKEN_FILE", "REGION_FROM_ECS"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["WebIdentityTokenCredentialsProvider", "Default credentials"]
      },
      "sdk_usage": {
        "sdk_type": "aws-sdk-java-v2",
        "clients": ["DynamoDbClient", "DynamoDbEnhancedClient"]
      },
      "package_dependencies": [
        "software.amazon.awssdk.enhanced.dynamodb",
        "software.amazon.awssdk.services.dynamodb",
        "software.amazon.awssdk.auth.credentials"
      ],
      "internal_dependencies": [
        {
          "resource_type": "DynamoDB",
          "resource_name": "apm_test",
          "file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/aws/DdbService.java"
        }
      ]
    },
    {
      "consumer_id": "customers_service_sqs_consumer",
      "component_type": "service",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java",
      "language": "Java",
      "description": "Customers service component that creates and publishes to SQS queue for monitoring",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": ["AWS_REGION", "AWS_WEB_IDENTITY_TOKEN_FILE", "REGION_FROM_ECS"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["WebIdentityTokenFileCredentialsProvider", "Default credentials"]
      },
      "sdk_usage": {
        "sdk_type": "aws-sdk-java-v2",
        "clients": ["SqsClient"]
      },
      "package_dependencies": [
        "software.amazon.awssdk.services.sqs",
        "software.amazon.awssdk.auth.credentials"
      ],
      "internal_dependencies": [
        {
          "resource_type": "SQS",
          "resource_name": "apm_test",
          "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java"
        }
      ]
    },
    {
      "consumer_id": "customers_service_kinesis_consumer",
      "component_type": "service",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java",
      "language": "Java",
      "description": "Customers service component that creates and reads from Kinesis stream for data streaming",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": ["AWS_REGION", "AWS_WEB_IDENTITY_TOKEN_FILE", "REGION_FROM_ECS"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["WebIdentityTokenFileCredentialsProvider", "Default credentials"]
      },
      "sdk_usage": {
        "sdk_type": "aws-sdk-java-v2",
        "clients": ["KinesisClient"]
      },
      "package_dependencies": [
        "software.amazon.awssdk.services.kinesis",
        "software.amazon.awssdk.auth.credentials"
      ],
      "internal_dependencies": [
        {
          "resource_type": "Kinesis",
          "resource_name": "apm_test",
          "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java"
        }
      ]
    },
    {
      "consumer_id": "vets_service_s3_consumer",
      "component_type": "service",
      "file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/web/VetResource.java",
      "language": "Java",
      "description": "Vets service that lists S3 buckets when retrieving vet information",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": ["AWS_REGION", "AWS_WEB_IDENTITY_TOKEN_FILE"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["WebIdentityTokenFileCredentialsProvider", "Default credentials"]
      },
      "sdk_usage": {
        "sdk_type": "aws-sdk-java-v2",
        "clients": ["S3Client"]
      },
      "package_dependencies": [
        "software.amazon.awssdk.services.s3",
        "software.amazon.awssdk.auth.credentials"
      ],
      "internal_dependencies": [
        {
          "resource_type": "S3",
          "resource_name": "*",
          "file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/aws/S3Service.java"
        }
      ]
    },
    {
      "consumer_id": "customers_service_bedrock_consumer",
      "component_type": "service",
      "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java",
      "language": "Java",
      "description": "Customers service component that retrieves Bedrock guardrails",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": ["AWS_REGION", "AWS_WEB_IDENTITY_TOKEN_FILE", "REGION_FROM_ECS"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["WebIdentityTokenCredentialsProvider", "Default credentials"]
      },
      "sdk_usage": {
        "sdk_type": "aws-sdk-java-v1",
        "clients": ["AmazonBedrock"]
      },
      "package_dependencies": [
        "com.amazonaws.services.bedrock",
        "com.amazonaws.auth"
      ],
      "internal_dependencies": [
        {
          "resource_type": "BedrockGuardrail",
          "resource_name": "*",
          "file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java"
        }
      ]
    },
    {
      "consumer_id": "otel_collector_xray_consumer",
      "component_type": "service",
      "file_path": "otel-collector/customconfig.yaml",
      "language": "YAML",
      "description": "OpenTelemetry collector that exports traces to AWS X-Ray",
      "resource_discovery": {
        "method": "environment variables",
        "environment_variables": ["REGION"]
      },
      "authentication": {
        "method": "IAM role",
        "role_references": ["sigv4auth"]
      },
      "package_dependencies": [],
      "internal_dependencies": [
        {
          "resource_type": "XRay",
          "resource_name": "https://xray.${REGION}.amazonaws.com/v1/traces",
          "file_path": "otel-collector/customconfig.yaml"
        }
      ]
    }
  ],
  "connections": [
    {
      "connection_id": "visits_ddb_create_table",
      "consumer_id": "visits_service_ddb_consumer",
      "provider_id": "dynamodb_apm_test_table",
      "provider_resource_type": "DynamoDB",
      "operation": "createTable",
      "access_type": "write",
      "description": "Visits service creates DynamoDB table for APM test data if it doesn't exist",
      "code_snippet": "CreateTableRequest request = CreateTableRequest.builder()\n    .tableName(tableName)\n    .keySchema(KeySchemaElement.builder()\n        .attributeName(\"id\")\n        .keyType(KeyType.HASH)\n        .build())\n    .attributeDefinitions(AttributeDefinition.builder()\n        .attributeName(\"id\")\n        .attributeType(ScalarAttributeType.S)\n        .build())\n    .provisionedThroughput(ProvisionedThroughput.builder()\n        .readCapacityUnits(1L)\n        .writeCapacityUnits(1L)\n        .build())\n    .build();\n\ndynamoDbClient.createTable(request);",
      "source_file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/aws/DdbService.java",
      "target_file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/aws/DdbService.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "visits_ddb_put_item",
      "consumer_id": "visits_service_ddb_consumer",
      "provider_id": "dynamodb_apm_test_table",
      "provider_resource_type": "DynamoDB",
      "operation": "putItem",
      "access_type": "write",
      "description": "Visits service stores items in DynamoDB table when processing visit requests",
      "code_snippet": "MyItem item = new MyItem.Builder(timestamp).withSomeData(\"This is some data\").build();\ntable.putItem(item);",
      "source_file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/aws/DdbService.java",
      "target_file_path": "spring-petclinic-visits-service/src/main/java/org/springframework/samples/petclinic/visits/aws/DdbService.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "customers_sqs_create_queue",
      "consumer_id": "customers_service_sqs_consumer",
      "provider_id": "sqs_apm_test_queue",
      "provider_resource_type": "SQS",
      "operation": "createQueue",
      "access_type": "write",
      "description": "Customers service creates SQS queue for APM test data if it doesn't exist",
      "code_snippet": "CreateQueueResponse createResult = sqs.createQueue(CreateQueueRequest.builder().queueName(QUEUE_NAME).build());",
      "source_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java",
      "target_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "customers_sqs_send_message",
      "consumer_id": "customers_service_sqs_consumer",
      "provider_id": "sqs_apm_test_queue",
      "provider_resource_type": "SQS",
      "operation": "sendMessage",
      "access_type": "write",
      "description": "Customers service sends messages to SQS queue",
      "code_snippet": "SendMessageRequest sendMsgRequest = SendMessageRequest.builder()\n    .queueUrl(queueUrl)\n    .messageBody(\"hello world\")\n    .delaySeconds(5)\n    .build();\nsqs.sendMessage(sendMsgRequest);",
      "source_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java",
      "target_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/SqsService.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "customers_kinesis_create_stream",
      "consumer_id": "customers_service_kinesis_consumer",
      "provider_id": "kinesis_apm_test_stream",
      "provider_resource_type": "Kinesis",
      "operation": "createStream",
      "access_type": "write",
      "description": "Customers service creates Kinesis stream for APM test data",
      "code_snippet": "CreateStreamRequest streamReq = CreateStreamRequest.builder()\n    .streamName(streamName)\n    .shardCount(1)\n    .build();\nkinesisClient.createStream(streamReq);",
      "source_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java",
      "target_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "customers_kinesis_get_records",
      "consumer_id": "customers_service_kinesis_consumer",
      "provider_id": "kinesis_apm_test_stream",
      "provider_resource_type": "Kinesis",
      "operation": "getRecords",
      "access_type": "read",
      "description": "Customers service retrieves records from Kinesis stream",
      "code_snippet": "GetRecordsRequest recordsRequest = GetRecordsRequest.builder()\n    .shardIterator(shardIterator)\n    .limit(1000)\n    .build();\n\nGetRecordsResponse result = kinesisClient.getRecords(recordsRequest);",
      "source_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java",
      "target_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/KinesisService.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "vets_s3_list_buckets",
      "consumer_id": "vets_service_s3_consumer",
      "provider_id": "s3_bucket_list",
      "provider_resource_type": "S3",
      "operation": "listBuckets",
      "access_type": "read",
      "description": "Vets service lists all S3 buckets when retrieving vet information",
      "code_snippet": "s3Service.listBuckets();",
      "source_file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/web/VetResource.java",
      "target_file_path": "spring-petclinic-vets-service/src/main/java/org/springframework/samples/petclinic/vets/aws/S3Service.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "customers_bedrock_list_guardrails",
      "consumer_id": "customers_service_bedrock_consumer",
      "provider_id": "bedrock_guardrails",
      "provider_resource_type": "BedrockGuardrail",
      "operation": "listGuardrails",
      "access_type": "read",
      "description": "Customers service lists Bedrock guardrails",
      "code_snippet": "ListGuardrailsRequest listRequest = new ListGuardrailsRequest();\nListGuardrailsResult listResponse = bedrockV1Client.listGuardrails(listRequest);",
      "source_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java",
      "target_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "customers_bedrock_get_guardrail",
      "consumer_id": "customers_service_bedrock_consumer",
      "provider_id": "bedrock_guardrails",
      "provider_resource_type": "BedrockGuardrail",
      "operation": "getGuardrail",
      "access_type": "read",
      "description": "Customers service gets details of a specific Bedrock guardrail",
      "code_snippet": "GetGuardrailRequest request = new GetGuardrailRequest()\n        .withGuardrailIdentifier(guardRailId);\nGetGuardrailResult response = bedrockV1Client.getGuardrail(request);",
      "source_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java",
      "target_file_path": "spring-petclinic-customers-service/src/main/java/org/springframework/samples/petclinic/customers/aws/BedrockV1Service.java",
      "configuration_source": "hardcoded",
      "criticality": "medium",
      "connection_type": "direct",
      "cross_repo": false
    },
    {
      "connection_id": "otel_xray_export_traces",
      "consumer_id": "otel_collector_xray_consumer",
      "provider_id": "xray_traces_endpoint",
      "provider_resource_type": "XRay",
      "operation": "putTraceSegments",
      "access_type": "write",
      "description": "OpenTelemetry collector exports trace data to AWS X-Ray",
      "code_snippet": "otlphttp:\n  traces_endpoint: https://xray.${REGION}.amazonaws.com/v1/traces\n  compression: gzip\n  auth:\n    authenticator: sigv4auth",
      "source_file_path": "otel-collector/customconfig.yaml",
      "target_file_path": "otel-collector/customconfig.yaml",
      "configuration_source": "environment variable",
      "criticality": "high",
      "connection_type": "direct",
      "cross_repo": false
    }
  ],
  "architecture": {
    "application_type": "microservice",
    "infrastructure_pattern": "container-based",
    "deployment_approach": "Kubernetes (EKS)",
    "configuration_management": "Environment variables and Spring Cloud Config",
    "critical_paths": [
      {
        "path_name": "telemetry_collection",
        "description": "Application telemetry collection and export to AWS X-Ray",
        "involved_components": ["otel_collector_xray_consumer", "xray_traces_endpoint"]
      },
      {
        "path_name": "monitoring_data_storage",
        "description": "Storage of monitoring data in various AWS services",
        "involved_components": ["visits_service_ddb_consumer", "customers_service_sqs_consumer", "customers_service_kinesis_consumer"]
      }
    ],
    "security_model": {
      "authentication": "IAM role-based authentication with different credential providers based on deployment environment",
      "authorization": "IAM policies managed outside the application code",
      "data_protection": "Standard AWS service security"
    },
    "cross_repo_dependencies": {
      "provides_to": [],
      "consumes_from": [],
      "shared_infrastructure": false
    }
  }
}